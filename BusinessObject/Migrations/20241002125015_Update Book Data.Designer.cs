// <auto-generated />
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241002125015_Update Book Data")]
    partial class UpdateBookData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObject.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            City = "HCM City",
                            Street = "Nguyen Hue Street"
                        },
                        new
                        {
                            AddressId = 2,
                            City = "HCM City",
                            Street = "Le Loi Street"
                        },
                        new
                        {
                            AddressId = 3,
                            City = "Binh Duong",
                            Street = "Binh Duong Revenue"
                        },
                        new
                        {
                            AddressId = 4,
                            City = "Binh Duong",
                            Street = "Hung Vuong Street"
                        },
                        new
                        {
                            AddressId = 5,
                            City = "HCM City",
                            Street = "Pham Ngu Lao Street"
                        },
                        new
                        {
                            AddressId = 6,
                            City = "HCM City",
                            Street = "Hai Ba Trung Street"
                        },
                        new
                        {
                            AddressId = 7,
                            City = "Binh Duong",
                            Street = "Tran Hung Dao Street"
                        },
                        new
                        {
                            AddressId = 8,
                            City = "Binh Duong",
                            Street = "Le Hong Phong Street"
                        },
                        new
                        {
                            AddressId = 9,
                            City = "HCM City",
                            Street = "Ton Duc Thang Street"
                        },
                        new
                        {
                            AddressId = 10,
                            City = "HCM City",
                            Street = "Dien Bien Phu Street"
                        });
                });

            modelBuilder.Entity("BusinessObject.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IBSN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PressId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BookId");

                    b.HasIndex("AddressId");

                    b.HasIndex("PressId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AddressId = 1,
                            Author = "Fujiko F. Fujio",
                            IBSN = "9786042073143",
                            PressId = 1,
                            Price = 14376m,
                            Title = "Doraemon"
                        },
                        new
                        {
                            BookId = 2,
                            AddressId = 2,
                            Author = "Antoine de Saint-Exupéry",
                            IBSN = "9786041073007",
                            PressId = 2,
                            Price = 25200m,
                            Title = "The Little Prince"
                        },
                        new
                        {
                            BookId = 3,
                            AddressId = 3,
                            Author = "William Duiker",
                            IBSN = "9786043097919",
                            PressId = 3,
                            Price = 30600m,
                            Title = "Ho Chi Minh: A Life"
                        },
                        new
                        {
                            BookId = 4,
                            AddressId = 4,
                            Author = "Nguyen Du",
                            IBSN = "9786041156545",
                            PressId = 4,
                            Price = 18000m,
                            Title = "The Tale of Kieu"
                        },
                        new
                        {
                            BookId = 5,
                            AddressId = 5,
                            Author = "Forbes Media",
                            IBSN = "9786042129877",
                            PressId = 5,
                            Price = 16776m,
                            Title = "Forbes Magazine"
                        },
                        new
                        {
                            BookId = 6,
                            AddressId = 6,
                            Author = "Nguyen Quang Hieu",
                            IBSN = "9786042028981",
                            PressId = 6,
                            Price = 36000m,
                            Title = "Textbook of Chemistry"
                        },
                        new
                        {
                            BookId = 7,
                            AddressId = 7,
                            Author = "Various",
                            IBSN = "9786042130425",
                            PressId = 7,
                            Price = 11976m,
                            Title = "Women's World Magazine"
                        },
                        new
                        {
                            BookId = 8,
                            AddressId = 8,
                            Author = "Nguyen Van Thanh",
                            IBSN = "9786042032517",
                            PressId = 8,
                            Price = 22200m,
                            Title = "Labor and Employment Law"
                        },
                        new
                        {
                            BookId = 9,
                            AddressId = 9,
                            Author = "Le Van Minh",
                            IBSN = "9786043049989",
                            PressId = 9,
                            Price = 45576m,
                            Title = "Principles of Technology"
                        },
                        new
                        {
                            BookId = 10,
                            AddressId = 10,
                            Author = "Le Huy Toan",
                            IBSN = "9786045068940",
                            PressId = 10,
                            Price = 49200m,
                            Title = "Vietnamese Art Through the Ages"
                        },
                        new
                        {
                            BookId = 11,
                            AddressId = 1,
                            Author = "J.K. Rowling",
                            IBSN = "9786041072545",
                            PressId = 2,
                            Price = 21576m,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            BookId = 12,
                            AddressId = 2,
                            Author = "Truong Buu Lam",
                            IBSN = "9786042067812",
                            PressId = 3,
                            Price = 33000m,
                            Title = "A Brief History of Vietnam"
                        },
                        new
                        {
                            BookId = 13,
                            AddressId = 3,
                            Author = "Le Thi Kim",
                            IBSN = "9786043152176",
                            PressId = 4,
                            Price = 14376m,
                            Title = "Cooking with Love"
                        },
                        new
                        {
                            BookId = 14,
                            AddressId = 4,
                            Author = "Various Authors",
                            IBSN = "9786041092182",
                            PressId = 5,
                            Price = 18000m,
                            Title = "Business News Magazine"
                        },
                        new
                        {
                            BookId = 15,
                            AddressId = 5,
                            Author = "Pham Van Dinh",
                            IBSN = "9786042076541",
                            PressId = 6,
                            Price = 39600m,
                            Title = "Advanced Mathematics"
                        },
                        new
                        {
                            BookId = 16,
                            AddressId = 6,
                            Author = "Various",
                            IBSN = "9786042151430",
                            PressId = 7,
                            Price = 95760m,
                            Title = "Women's Weekly Magazine"
                        },
                        new
                        {
                            BookId = 17,
                            AddressId = 7,
                            Author = "Nguyen Thi Lan",
                            IBSN = "9786043087103",
                            PressId = 8,
                            Price = 26400m,
                            Title = "Employment Law Handbook"
                        },
                        new
                        {
                            BookId = 18,
                            AddressId = 8,
                            Author = "Le Duc Thinh",
                            IBSN = "9786044087217",
                            PressId = 9,
                            Price = 54600m,
                            Title = "The Science of Everything"
                        },
                        new
                        {
                            BookId = 19,
                            AddressId = 9,
                            Author = "Tran Quang Huy",
                            IBSN = "9786045089128",
                            PressId = 10,
                            Price = 61200m,
                            Title = "Vietnamese Folk Art"
                        },
                        new
                        {
                            BookId = 20,
                            AddressId = 10,
                            Author = "Akira Toriyama",
                            IBSN = "9786042075652",
                            PressId = 1,
                            Price = 15600m,
                            Title = "Dragon Ball"
                        });
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Book"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Magazine"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "EBook"
                        });
                });

            modelBuilder.Entity("BusinessObject.Press", b =>
                {
                    b.Property<int>("PressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PressId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("PressName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PressId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Presses");

                    b.HasData(
                        new
                        {
                            PressId = 1,
                            CategoryId = 1,
                            PressName = "Kim Dong Publishing House"
                        },
                        new
                        {
                            PressId = 2,
                            CategoryId = 1,
                            PressName = "Tre Publishing House"
                        },
                        new
                        {
                            PressId = 3,
                            CategoryId = 1,
                            PressName = "National Political Publishing House"
                        },
                        new
                        {
                            PressId = 4,
                            CategoryId = 1,
                            PressName = "General Publishing House"
                        },
                        new
                        {
                            PressId = 5,
                            CategoryId = 2,
                            PressName = "Communication And News Publishing House"
                        },
                        new
                        {
                            PressId = 6,
                            CategoryId = 1,
                            PressName = "Education Publishing House"
                        },
                        new
                        {
                            PressId = 7,
                            CategoryId = 2,
                            PressName = "Women Publishing House"
                        },
                        new
                        {
                            PressId = 8,
                            CategoryId = 2,
                            PressName = "Lao Dong Publishing House"
                        },
                        new
                        {
                            PressId = 9,
                            CategoryId = 3,
                            PressName = "Science And Technology Publishing House"
                        },
                        new
                        {
                            PressId = 10,
                            CategoryId = 3,
                            PressName = "Culture And Arts Publishing House"
                        });
                });

            modelBuilder.Entity("BusinessObject.Book", b =>
                {
                    b.HasOne("BusinessObject.Address", "Address")
                        .WithMany("Books")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Press", "Press")
                        .WithMany("Books")
                        .HasForeignKey("PressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Press");
                });

            modelBuilder.Entity("BusinessObject.Press", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany("Presses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObject.Address", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Navigation("Presses");
                });

            modelBuilder.Entity("BusinessObject.Press", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
